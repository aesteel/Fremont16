{
    "contents" : "\n\n### Explore the spatial distribution of filtered positions; compare to retained positions\n``` {r}\n # read in shapefile with river bank\n  riverbankUTM = readOGR(dsn=\"GIS/2004_channel\", layer=\"2004_channel_freTightclip\")\n  riverbank.latlong = spTransform(riverbankUTM, CRS(\"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0\"))\n  #Vemco CRS: \"+proj=aeqd +lat_0=38.759985 +lon_0=-121.666908 +x_0=1000 +y_0=1000 +datum=WGS84\" # assigns values from 0-2000. Huh.\n\n  plot(dropdf.sp, pch=16, col=viridis(10,alpha=.6))\n  plot(riverbank, add=T, col=\"red\")\n  \n  ### Figure 9 in 2015 report - not inehrently scaled here\nwindows(); par(mfrow=c(1,1))\n  ggplot(alldfg[alldfg$Hpes<10,], aes(y=Latitude, x=Longitude, colour=Hpes)) + geom_point(size=1.5) + \n    scale_colour_gradient2(name=\"HPEs\", low = \"green3\", mid=\"yellow\", high = \"red\", midpoint=3, space = \"rgb\", na.value = \"grey50\", guide = \"colourbar\") +\n    ggtitle(\"Unfiltered: Positional HPEs\") +\n    scale_y_continuous(breaks=seq(38.758,38.764,0.001)) + \n    scale_x_continuous(breaks=seq(-121.672, -121.664, 0.001)) +\n    theme_bw() + theme(title=element_text(vjust=2), axis.title.x=element_text(vjust=-.5),axis.title.y=element_text(vjust=1))\n        \n  ### Figure 10 in 2015 report###\n windows(); par(mfrow=c(1,1))\n  hist(alldfg$Hpes, main=\"Calculated HPEs, all positions\",xlab=\"HPEs\", breaks=150000, xlim=c(0,10))\n  abline(v=0.5, col=\"red\", lty=2)\n\n          \n          ### not in report ###\n         windows(); par(mfrow=c(1,1))\n          hist(alldfg$Hpes[alldfg$Hpes <= 0.5], main=\"Calculated HPEs, filtered positions\",xlab=\"HPEs\", breaks=45)\n          abline(v=0.5, col=\"red\", lty=2)      \n\n         # distributions of detections and positions that were considered for each calculated fish position\n          ### not in report ###\n         windows(); par(mfrow=c(2,2))\n          hist(alldfg$GoodBasicCount, breaks=50, main=\"All Positions:\\nNumber of Good Basic positions \\nper estimated position\", xlab=\"N Good Basic Positions\")\n          hist(reddf$GoodBasicCount, breaks=50, main=\"Positions HPEs<0.5:\\nNumber of Good Basic positions \\nper estimated position\", xlab=\"N Good Basic Positions\")\n      \n          hist(alldfg$DetectionsCount, breaks=25, main=\"All Positions:\\nNumber of Detections \\nper estimated position\", xlab=\"N Detections\")\n          hist(reddf$DetectionsCount, breaks=25, main=\"Positions HPEs<0.5:\\nNumber of Detections \\nper estimated position\", xlab=\"N Detections\")\n      \n         # count the number of fish in each dataframe\n         length(unique(alldfg$Id))  # 490\n         length(unique(reddf$Id))   # 490  great!\n\n\n   # calculate the number of positions per fish\n          #    all.npf = alldfg %>%\n          #      group_by(Id) %>%\n          #      summarize(npos.all=n())\n\n   all.npf = aggregate(alldfg$Id, by=list(alldfg$Id), FUN=length)\n    names(all.npf) = c(\"Id\",\"npos.all\")\n\n           summary(all.npf$npos.all)\n           sort(boxplot.stats(all.npf$npos.all)$out)\n            outlierfish.all = all.npf[all.npf$npos.all %in% sort(boxplot.stats(all.npf$npos.all)$out),]\n        \n           # look at the tracks of those fish with 'too many' positions before filtering\n           windows()\n           ggplot(data=alldfg[alldfg$Id %in% outlierfish.all$Id,], aes(x=Longitude, y=Latitude)) + geom_point() +\n              facet_wrap(~Id, ncol=4) + ggtitle(\"Tracks for outliers, positions not filtered\")\n\n          #    red.npf = reddf %>%\n          #      group_by(Id) %>%\n          #      summarize(npos.red= n())\n   red.npf = aggregate(reddf$Id, by=list(reddf$Id), FUN=length)\n    names(red.npf) = c(\"Id\",\"npos.red\")\n\n           summary(red.npf$npos.red)   \n           sort(boxplot.stats(red.npf$npos.red)$out)  # highlight these fish for later exploration as predators\n            outlierfish.red = red.npf[red.npf$npos.red %in% sort(boxplot.stats(red.npf$npos.red)$out),]\n        \n           # look at the tracks of those fish with 'too many' positions even after filtering\n           windows()\n           ggplot(data=reddf[reddf$Id %in% outlierfish.red$Id,], aes(x=Longitude, y=Latitude)) + geom_point() +\n              facet_wrap(~Id, ncol=4) + ggtitle(\"Tracks for outliers, positions filtered HPEs<0.5\")\n\n  comp.npf = merge(all.npf, red.npf, by=\"Id\")\n   comp.npf$perc.remain = comp.npf$npos.red / comp.npf$npos.all\n   \n   \n   \n### Figure 8 in report ###\n          windows(); par(mfrow=c(1,1))\n#            hist(comp.npf$npos.all, xlim=c(0,500), breaks=1000, ylim=c(0,120), col=\"grey95\",\n#                 main=\"Unfiltered: Positions per Fish\", xlab=\"N Positions\")\n          unfilt.ppf = ggplot(data = comp.npf, aes(npos.all)) + \n            geom_histogram(binwidth=35, col=I(\"black\"), fill=\"grey95\") + \n            ggtitle(\"Unfiltered\nPositions per Fish\") + \n            scale_x_continuous(breaks=seq(0,500,100), limits=c(0,500)) + \n            scale_y_continuous(breaks=seq(0,80,20), limits=c(0,80)) + \n            xlab(\"N Positions\") + ylab(\"Frequency\") + \n            theme_bw() + \n            theme(title=element_text(vjust=2), \n                  axis.title.x=element_text(vjust=-.5),\n                  axis.title.y=element_text(vjust=1.2),\n                  plot.margin=unit(c(1,1,1.25,1), \"cm\"))\n          unfilt.ppf\n       \n#           windows(); par(mfrow=c(1,2))\n#            hist(comp.npf$npos.all, xlim=c(0,500), breaks=1000, ylim=c(0,130), col=\"grey95\",\n#                 main=\"All Positionsn/Number of positions per fish\", xlab=\"N Positions\")\n#            hist(comp.npf$npos.red, xlim=c(0,500), breaks=200, ylim=c(0,130), col=\"grey95\",\n#                 main=\"Positions HPEs <0.5\\nNumber of positions per fish\", xlab=\"N Positions\")\n#           windows(); par(mfrow=c(1,1))\n#            hist(comp.npf$perc.remain, ylim=c(0,100), col=\"grey95\",\n#                 main=\"Proportion of positions per fish\\nremaining at HPEs<0.5\", xlab=\"Proportion\")\n\n                      \n               \n### Figure 10 in 2015 report###\n       filtlevel = ggplot(data = alldfg, aes(Hpes)) + \n            geom_histogram(binwidth=.2, col=I(\"black\"), fill=\"grey95\") + \n            ggtitle(\"Calculated HPEs, all positions\") + \n            scale_x_continuous(breaks=seq(0,10,2), limits=c(0,10)) + \n            xlab(\"HPEs\") + ylab(\"Frequency\") + \n            theme_bw() + \n            theme(title=element_text(vjust=2), \n                  axis.title.x=element_text(vjust=-.5),\n                  axis.title.y=element_text(vjust=1.2),\n                  plot.margin=unit(c(1,1,1.25,1), \"cm\")) +\n            geom_vline(xintercept = 0.5, col=\"red\", lty=2) + \n            annotate(\"text\",x=0.6, y=50100, label=\"HPEs = 0.5\", col=\"red\", adj=0, size=4)\n       #windows()\n        #filtlevel\n\n       filt.ppf = ggplot(data = comp.npf, aes(npos.red)) + \n            geom_histogram(binwidth=25, col=I(\"black\"), fill=\"grey95\") + \n            ggtitle(\"Filtered at HPEs<0.5:\n\nPositions per Fish\") +  # this line must be justified like this to get the title correct\n            scale_x_continuous(breaks=seq(0,500,100), limits=c(0,500)) + \n            scale_y_continuous(breaks=seq(0,70,20), limits=c(0,70)) + \n            xlab(\"N Positions\") + ylab(\"Frequency\") + \n            theme_bw() + \n            theme(title=element_text(vjust=2), \n                  axis.title.x=element_text(vjust=-.5),\n                  axis.title.y=element_text(vjust=1.2),\n                  plot.margin=unit(c(.1,1,.75,.5), \"cm\"))\n        #filt.ppf\n           \n            \n       filt.proprem = ggplot(data = comp.npf, aes(perc.remain)) + \n            geom_histogram(binwidth=.04, col=I(\"black\"), fill=\"grey95\") + \n            ggtitle(\"\nProportion Positions \nRemaining per Fish\") +  # this line must be justified like this to get the title correct\n            scale_x_continuous(breaks=seq(0,1,.2), limits=c(0,1)) + \n            scale_y_continuous(breaks=seq(0,85,20), limits=c(0,85)) + \n            xlab(\"Proportion\") + ylab(\"Frequency\") + \n            theme_bw() + \n            theme(title=element_text(vjust=2), \n                  axis.title.x=element_text(vjust=-.5),\n                  axis.title.y=element_text(vjust=1.2),\n                  plot.margin=unit(c(.1,1,.75,.5), \"cm\"))\n        #filt.proprem\n        \n       png(\"Graphics/Figure10_Filtered_ComboFigure.png\", width=8, height=4.75, units=\"in\", res=300)\n        ggdraw() + \n          draw_plot(filtlevel, x=0,y=0,width=.6, height=1) + \n          draw_plot(filt.ppf, x=.6,y=.475,width=.4, height=0.45) + \n          draw_plot(filt.proprem, x=.6,y=0.025,width=.4, height=0.45) +  \n          draw_plot_label(label=c(\"A\",\"B\",\"C\"), x=c(0.05,0.62,0.62), y=c(.975,.88,.45), size=16)\n        dev.off()\n        \n        \n        \n  # look at fish which have a large proportion of positions removed (<=70%) vs those that don't (<=20%)\n   poorHpes = comp.npf[comp.npf$perc.remain<=.3,]  # 11 fish\n   #goodHpes = comp.npf[comp.npf$perc.remain>=.7,]  # 105 fish\n   goodHpes = comp.npf[comp.npf$perc.remain>=.8,]  # 10 fish\n\n        \n           # where are the errors in the 'bad' tracks?\n           windows()\n           ggplot(data=alldfg[alldfg$Id %in% poorHpes$Id & alldfg$Hpes<100,], aes(x=Longitude, y=Latitude, color=(Hpes))) + geom_point() + \n              facet_wrap(~Id, ncol=4) + scale_colour_gradientn(colours=rainbow(5))\n        \n           # does the track change significantly when the poor Hpes points are removed? No\n           windows()\n           ggplot(data=alldfg[alldfg$Id %in% poorHpes$Id,], aes(x=Longitude, y=Latitude)) + geom_point() + \n              facet_wrap(~Id, ncol=4) + ggtitle(\"'Poor' tracks with no filtering\")\n           windows()\n           ggplot(data=alldfg[alldfg$Id %in% poorHpes$Id & alldfg$Hpes<0.5,], aes(x=Longitude, y=Latitude)) + geom_point() + \n              facet_wrap(~Id, ncol=4) + ggtitle(\"'Poor' tracks filtered at HPEs < 0.5\")\n        \n        \n           # where are the errors when we consider the 'good' tracks??\n           windows()\n           ggplot(data=alldfg[alldfg$Id %in% goodHpes$Id,], aes(x=Longitude, y=Latitude, color=Hpes)) + geom_point() +\n              facet_wrap(~Id, ncol=4) + scale_colour_gradientn(colours=rainbow(5))\n        \n           # does the track change significantly when the poor Hpes points are removed? No\n           windows()\n           ggplot(data=alldfg[alldfg$Id %in% goodHpes$Id,], aes(x=Longitude, y=Latitude)) + geom_point() +\n              facet_wrap(~Id, ncol=4) + ggtitle(\"'Good' tracks with no filtering\")\n           windows()\n           ggplot(data=alldfg[alldfg$Id %in% goodHpes$Id & alldfg$Hpes<0.5,], aes(x=Longitude, y=Latitude)) + geom_point() +\n              facet_wrap(~Id, ncol=4) + ggtitle(\"'Good' tracks filtered at HPEs < 0.5\")\n#####\n\n\n           \n           \n           \n\n# Look at plots to pull tagIDs for potential predators based on upstream (or round-about) 2D movement #####\n           windows()\n             highN.red = red.npf[red.npf$npos.red >= quantile(red.npf$npos.red, .95),]\n             ggplot(data=reddf[reddf$Id %in% highN.red$Id,], aes(x=Longitude, y=Latitude)) + geom_path(aes(colour=as.POSIXlt(Time)$hour)) +\n                facet_wrap(~Id, ncol=5) + scale_colour_gradientn(colours=rainbow(6)) + ggtitle(\"Highest 5% N positions, positions filtered HPEs<0.5\")\n\n\n# Look at arrival and departure times and locations\n fl.df = reddf %>%\n    group_by(Id) %>%\n    slice(c(1,n()))\n fl.df = as.data.frame(fl.df)\n fl.df$fl = rep(c(\"F\",\"L\"),490)  \n\n  ff = fl.df[fl.df$fl==\"F\",c(\"Id\",\"Time\",\"Latitude\",\"Longitude\")] \n   names(ff) = c(\"Id\",\"F.time\",\"F.lat\",\"F.long\")\n  ll = fl.df[fl.df$fl==\"L\",c(\"Id\",\"Time\",\"Latitude\",\"Longitude\")]\n   names(ll) = c(\"Id\",\"L.time\",\"L.lat\",\"L.long\")\n\n fl.df2 = merge(ff,ll)\n\n # calculate passage time through array, and look at long pass times\n fl.df2$arraytime_min = as.numeric(difftime(fl.df2$L.time, fl.df2$F.time))\n           hist(fl.df2$arraytime_min, breaks=50)\n  long.fish = fl.df2[fl.df2$arraytime_min > 300,]$Id\n    # 49654, 56029, 43794, 59051\n\n # calculate location of final detection; upstream?  \n           windows(); par(mfrow=c(1,1)); hist(fl.df2$L.long); abline(v=-121.6679,col=\"red\", lty=2)\n  upfish = fl.df2[fl.df2$L.long < -121.6679,]$Id\n    # 49654, 56029\n\n\n\n# plot detections per fish of filtered dataset, by run #####\n  red2.npf = red.npf[!(red.npf$Id%in%preds),]\n  red3.npf = merge(red2.npf, tagruns, by.x=\"Id\", by.y=\"ID.Tag\", all.x=TRUE)\n\n  tt.pval = t.test(red3.npf$npos.red[red3.npf$Species==\"LFC\"],red3.npf$npos.red[red3.npf$Species==\"WRC\"])\n\n  boxplot(red3.npf$npos.red~red3.npf$Species, ylab=\"Number of Positions\")\n   mtext(paste(\"t-test: p =\",round(tt.pval$p.value,7)), side=3, adj=1, cex=.8) \n   mtext(paste(\"mean =\",round(tt.pval$estimate[1],1)), side=1, line=2, adj=.2, cex=.8, font=3) \n   mtext(paste(\"mean =\",round(tt.pval$estimate[2],1)), side=1, line=2, adj=.8, cex=.8, font=3) \n#####",
    "created" : 1470950106154.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2441647743",
    "id" : "D6DA3EFE",
    "lastKnownWriteTime" : 13229817834242158,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}